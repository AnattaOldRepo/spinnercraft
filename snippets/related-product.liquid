{% comment %}
  Number of related items per row,
  and number of rows.
{% endcomment %}

{% assign number_of_related_products_per_row = 4 %}
{% assign number_of_rows = 1 %}

{% comment %}
  Heading.
  Leave blank if you don't need one.
{% endcomment %}

{% assign heading = 'You might also like' %}

{% comment %}
  Set either or both to true, if you want
  to limit yourself to items with same vendor, and/or type.
{% endcomment %}

{% assign same_vendor = false %}
{% assign same_type = true %}

{% comment %}
  Collections to ignore.
  Never pick related items from those.
{% endcomment %}

{% assign exclusions = 'frontpage,all' | split: ',' %}

{% comment %}
  Looking for a relevant collection.
{% endcomment %}

{% if product.metafields.c_f['Related Products'] %}
  {% assign collection = collections[product.metafields.c_f['Related Products']] %}
{% endif %}

{% assign found_a_collection = false %}
{% if collection and collection.all_products_count > 1 %}
  {% unless exclusions contains collection.handle %}
    {% assign found_a_collection = true %}
  {% endunless %}
{% endif %}
{% unless found_a_collection %}
  {% for c in product.collections %}
    {% unless exclusions contains c.handle or c.all_products_count < 2 %}
      {% assign found_a_collection = true %}
      {% assign collection = c %}
      {% break %}
    {% endunless %}
  {% endfor %}
{% endunless %}

{% comment %}
  If we have a relevant collection.
{% endcomment %}

{% if found_a_collection %}
  {% assign counter = 0 %}
  {% assign break_at = number_of_rows | times: number_of_related_products_per_row | times: 2 %}
  {% assign current_product = product %}

  {% case number_of_related_products_per_row %}
    {% when 1 %}
      {% assign grid_item_width = '' %}
    {% when 2 %}
      {% assign grid_item_width = 'small--one-half medium-up--one-half' %}
    {% when 3 %}
      {% assign grid_item_width = 'small--one-half medium-up--one-third' %}
    {% when 4 %}
      {% assign grid_item_width = 'small--one-half medium-up--one-quarter' %}
    {% when 5 %}
      {% assign grid_item_width = 'small--one-half medium-up--one-fifth' %}
    {% when 6 %}
      {% assign grid_item_width = 'small--one-half medium-up--one-sixth' %}
    {% else %}
      {% assign grid_item_width = 'small--one-half medium-up--one-quarter' %}
  {% endcase %}

  {% capture related_items %}
<div id="related_items_grid" class="o-grid">

  {% for product in collection.products %}
  {% unless product.handle == current_product.handle %}
  {% unless same_vendor and current_product.vendor != product.vendor %}
  {% unless same_type and current_product.type != product.type %}
  <div class="o-grid__4-12">
    {% include 'product-card-grid' %}
  </div>
  {% assign counter = counter | plus: 1 %}
  {% if counter == break_at %}
  {% break %}
  {% endif %}
  {% endunless %}
  {% endunless %}
  {% endunless %}
  {% endfor %}
</div>
  {% endcapture %}

  {% assign related_items = related_items | trim %}

  {% unless related_items == blank %}

  <div class="pdp-relatedProducts__item">
    {% unless heading == blank %}
    <h3 class="h3 text-center">{{ heading }}</h3>
    {% endunless %}
      {{ related_items }}
  </div>

  {% endunless %}
     
{% endif %}
  
</div>

<script type="text/javascript">

(function( $ ){
  $.fn.pick = function(how_many) {
    
    var how_many = how_many || 3;
  
    // Picking random numbers without repeating. 
    var index_array = [];
    var original_obj_size = this.size();
    for (var i=0; i<original_obj_size; i++) {
      index_array.push(i);
    }
    //+ Jonas Raoni Soares Silva
    //@ http://jsfromhell.com/array/shuffle [rev. #1]
    var shuffle = function(v) {
      for (var j, x, i = v.length; i; j = parseInt(Math.random() * i), x = v[--i], v[i] = v[j], v[j] = x);
      return v;
    };
    var new_index_array = shuffle(index_array).slice(0,how_many);
    
    // Ditching unpicked elements and removing those from the returned set.
    return this.each(function(i) {
       if ($.inArray(i,new_index_array) === -1) {
          $(this).remove();
       }
    }).filter(function() {
      if (this.parentNode === null) {
        return false;
      }
      else {
        return true;
      }
    });

  };
})( jQuery );
                                       
var howMany = 3;
jQuery('#related_items_grid > .o-grid__4-12').pick(howMany);

</script>